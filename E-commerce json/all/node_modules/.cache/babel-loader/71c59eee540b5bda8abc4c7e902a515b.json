{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Palikhe\\\\Desktop\\\\React 2021\\\\Ayush Solutions\\\\all\\\\src\\\\components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport Navigation from './Navigation';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await (await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    })).json();\n\n    if (!result.error) {\n      console.log(result.message);\n      alert(\"New admin registered\");\n      history.push('/login');\n    } else {\n      console.log(result.error);\n    }\n  };\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'email') {\n      setEmail(e.currentTarget.value);\n    } else {\n      setPassword(e.currentTarget.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Admin Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login_input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: handleChange,\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Email\",\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: handleChange,\n            type: \"password\",\n            name: \"password\",\n            autoComplete: \"current-password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"8BHiItuLC1AQqhTCtdjbT/NhK+g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Ayush Palikhe/Desktop/React 2021/Ayush Solutions/all/src/components/Register.js"],"names":["React","useState","navigate","Navigation","useHistory","Register","history","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","result","fetch","method","headers","body","JSON","stringify","json","error","console","log","message","alert","push","handleChange","currentTarget","name","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAACF,UAAU,EAAxB;AACC,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACD,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAClEC,MAAAA,MAAM,EAAE,MAD0D;AAGlEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHyD;AAMlEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,QAAAA,KAAK,EAAEA,KADY;AAEnBE,QAAAA,QAAQ,EAAEA;AAFS,OAAf;AAN4D,KAAnC,CAAZ,EAUjBY,IAViB,EAArB;;AAYC,QAAG,CAACP,MAAM,CAACQ,KAAX,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,OAAnB;AACAC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACApB,MAAAA,OAAO,CAACqB,IAAR,CAAa,QAAb;AACH,KAJD,MAKI;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACQ,KAAnB;AAEH;AACH,GAvBD;;AA2BA,QAAMM,YAAY,GAAGhB,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACiB,aAAF,CAAgBC,IAAhB,KAAyB,OAA7B,EAAsC;AACpCtB,MAAAA,QAAQ,CAACI,CAAC,CAACiB,aAAF,CAAgBE,KAAjB,CAAR;AACD,KAFD,MAEO;AACLrB,MAAAA,WAAW,CAACE,CAAC,CAACiB,aAAF,CAAgBE,KAAjB,CAAX;AACD;AACF,GAND;;AAQA,sBACE;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEpB,YAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,KAAK,EAAEJ,KADT;AAEE,YAAA,QAAQ,EAAEqB,YAFZ;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,WAAW,EAAC,OALd;AAME,YAAA,YAAY,EAAC;AANf;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,KAAK,EAAEnB,QADT;AAEE,YAAA,QAAQ,EAAEmB,YAFZ;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,YAAY,EAAC,kBALf;AAME,YAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAtED;;GAAMvB,Q;UACUD,U;;;KADVC,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import React, { useState} from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport Navigation from './Navigation';\r\nimport { useHistory } from 'react-router';\r\n \r\nconst Register = () => {\r\n  const history=useHistory();\r\n   const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const result = await (await fetch('http://localhost:4000/register', {\r\n      method: 'POST',\r\n      \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })).json();\r\n    \r\n     if(!result.error){\r\n         console.log(result.message);\r\n         alert(\"New admin registered\");\r\n         history.push('/login')\r\n     }\r\n     else{\r\n         console.log(result.error)\r\n         \r\n     }\r\n  };\r\n\r\n  \r\n\r\n  const handleChange = e => {\r\n    if (e.currentTarget.name === 'email') {\r\n      setEmail(e.currentTarget.value);\r\n    } else {\r\n      setPassword(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Navigation/>\r\n\r\n    <div className=\"main_login\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Admin Register</h1>\r\n        <div className=\"login_input\">\r\n          <input\r\n            value={email}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            autoComplete=\"email\"\r\n          />\r\n          <input\r\n            value={password}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"current-password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <button type=\"submit\">Register</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}